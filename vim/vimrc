" Vim
"
" Inspiration
"  - https://github.com/peterhellberg/dotfiles/blob/master/.vimrc
"  - https://github.com/junegunn/vim-plug
"  - https://github.com/tpope/

set nocompatible " explicitly get out of vi-compatible mode
filetype off

call plug#begin('~/.vim/plugged')

Plug 'tpope/vim-sensible'

Plug 'ctrlpvim/ctrlp.vim'
"Plug 'neoclide/coc.nvim'
Plug 'scrooloose/nerdtree'
Plug 'dense-analysis/ale'

Plug 'elixir-editors/vim-elixir'
Plug 'rust-lang/rust.vim'
Plug 'racer-rust/vim-racer'
Plug 'davidhalter/jedi-vim'
Plug 'nvie/vim-flake8'
Plug 'vim-scripts/indentpython.vim'
Plug 'ziglang/zig.vim'

Plug 'haishanh/night-owl.vim'

call plug#end()

colorscheme night-owl
set termguicolors

let mapleader = ","

syntax on
filetype plugin indent on

set anti enc=utf-8
set guifont=Office_Code_Pro_D:h13

set number
set cursorline
set scrolloff=3

" Always show the status line
set showcmd
set laststatus=2 

" Make backspace a bit more flexible
set backspace=indent,eol,start 

" Turn on command line completion wild style
set wildmenu 
set ruler

set shiftwidth=4
set softtabstop=4
set tabstop=4

" Tabs as spaces
set expandtab 
set smarttab

" Searching
set ignorecase
set smartcase
set incsearch
set hlsearch
set showmatch

" Turn of bell
set visualbell 
set t_vb=

set nobackup
set nowb
set noswapfile

set nocursorcolumn

set modelines=3

au InsertLeave * set cursorline nopaste


" Disable Ex mode
nnoremap Q <Nop>

" Turn off search highlight
nnoremap <leader><space> :nohlsearch<CR>

" setting horizontal and vertical splits
set splitbelow
set splitright

" Open new buffers
nmap <leader>s<left>   :leftabove  vnew<cr>
nmap <leader>s<right>  :rightbelow vnew<cr>
nmap <leader>s<up>     :leftabove  new<cr>
nmap <leader>s<down>   :rightbelow new<cr>

" Tab between buffers
noremap <tab> <c-w>w
noremap <S-tab> <c-w>W

" Switch between last two buffers
nnoremap <leader><leader> <C-^>

" Go to home and end using capitalized directions
noremap H ^
noremap L $

"split navigations
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Resize buffers
if bufwinnr(1)
  nmap ö <C-W><<C-W><
  nmap ä <C-W>><C-W>>
  nmap Ä <C-W>-<C-W>-
  nmap Ö <C-W>+<C-W>+
endif

" Elixir Development

autocmd FileType elixir setlocal formatprg=mix\ format\ -

" Python development

" Indendation
au BufNewFile, BufRead *.py
    \ set tabstop=4 |
    \ set softtabstop=4 |
    \ set shiftwidth=4 |
    \ set textwidth=79 |
    \ set expandtab |
    \ set autoindent |
    \ set fileformat=unix

highlight BadWhitespace ctermbg=red guibg=darkred
au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match BadWhitespace /\s\+$/

autocmd FileType python map <buffer> <F5> :w<CR>:exec '!python3' shellescape(@%, 1)<CR>
autocmd FileType python imap <buffer> <F5> <esc>:w<CR>:exec '!python3' shellescape(@%, 1)<CR>

" NERDTree
nmap <leader>n :NERDTreeToggle<CR>

let NERDTreeDirArrowExpandable = '→'
let NERDTreeDirArrowCollapsible = '↓'
let NERDTreeHighlightCursorline=1

" Ale
let g:ale_linters = {
      \   'python': ['flake8', 'pylint'],
      \   'ruby': ['standardrb', 'rubocop'],
      \   'javascript': ['eslint'],
      \}
